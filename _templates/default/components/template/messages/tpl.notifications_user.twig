{% extends 'tpl.container.twig' %}

{% import 'tpl.sidebar.twig' as sidebar %}
{% import 'forms/tpl.topbarNoPrint.twig' as topbar %}

{% block tpl_grid %}

	<div class="container-fluid">
		{{ sidebar.tpl_sidebar }}
		<div id="stage">
			{{ topbar.tpl_topbar }}
			<div id="content-container">
				<div id="content">
					<div class="report-table table-responsive">
						<table class="table table-striped" id = "myTable">
							<tr>
								<th onclick="sortTable($(this), 0)">Title</th>
								<th onclick="sortTable($(this), 1)">Message</th>
								<th onclick="sortTable($(this), 5)">Read</th>
								<th onclick="sortTable($(this), 6)">Read Status</th>
							<tr>
							{% for message in messages %}
								<tr class="message-row">
									<td>{{ message.title }}</td>
									<td>{% if(message.text|length > 100) %}  {{ message.text|slice(0, 100) ~ '...'}} {% else %} {{ message.text  }}  {% endif %}</td>
									
									<td style="vertical-align: middle" >
										<a href="javascript:;" onclick="viewNotifications({{ message.id }})">
											<i class="fas fa-sticky-note"></i>
										</a>
									</td>
									<td style="vertical-align: middle">
                    {% if message.status == "1" %}
                    <div style="color: green">
                      <i class='fas fa-check'></i>
                    </div>
                    {% endif %}
									</td>
									
								</tr>
							{% endfor %}
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>

	<script>
	
function sortTable(td, n) {

	var data = td.children().first();
	if(data.length == 0){
		td.html(td.text() + ' ' + '<i class="fas "></i>');
		data = td.children().first();
	}
	if(!data.hasClass('fa-caret-up') && !data.hasClass('fa-caret-down'))
	{
		data.addClass('fa-caret-down');
	}else{
		if(data.hasClass('fa-caret-up')) 
		{
			data.removeClass('fa-caret-up'); 
			data.addClass('fa-caret-down');

		}
		else 
		{
			data.removeClass('fa-caret-down');
			data.addClass('fa-caret-up');
		}
	}

  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("myTable");
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc"; 
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {
    //start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 2; i < (rows.length - 3); i++) {
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;      
    } else {
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>
{% endblock %}